{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\nimport { Controller } from 'react-hook-form';\nimport { Input, Icon } from '@rneui/themed';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar EmailInput = function EmailInput(_ref) {\n  var _errors$name, _errors$name2;\n  var name = _ref.name,\n    control = _ref.control,\n    errors = _ref.errors,\n    inputStyle = _ref.inputStyle,\n    errorValidationStyle = _ref.errorValidationStyle;\n  return _jsxs(_Fragment, {\n    children: [_jsx(Controller, {\n      control: control,\n      rules: {\n        required: true,\n        pattern: /^\\S+@\\S+$/i\n      },\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n        return _jsx(Input, {\n          onChangeText: onChange,\n          onBlur: onBlur,\n          value: value,\n          style: inputStyle,\n          placeholderTextColor: \"black\",\n          leftIcon: _jsx(Icon, {\n            name: \"at\",\n            type: \"ionicon\",\n            size: 24,\n            color: 'black'\n          }),\n          keyboardType: \"email-address\"\n        });\n      },\n      name: name\n    }), ((_errors$name = errors[name]) == null ? void 0 : _errors$name.type) === 'required' && _jsx(Text, {\n      style: errorValidationStyle,\n      children: \"Field Required\"\n    }), ((_errors$name2 = errors[name]) == null ? void 0 : _errors$name2.type) === 'pattern' && _jsx(Text, {\n      style: errorValidationStyle,\n      children: \"Wrong Format\"\n    })]\n  });\n};\nexport default EmailInput;","map":{"version":3,"names":["React","Controller","Input","Icon","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","EmailInput","_ref","_errors$name","_errors$name2","name","control","errors","inputStyle","errorValidationStyle","children","rules","required","pattern","render","_ref2","_ref2$field","field","onChange","onBlur","value","onChangeText","style","placeholderTextColor","leftIcon","type","size","color","keyboardType","Text"],"sources":["/Users/landroide/Desktop/ReactNative/Pros/WithExpo/Demo-project/src/components/inputs/EmailInput.js"],"sourcesContent":["import {Text, View } from 'react-native'\nimport React from 'react'\nimport { Controller } from 'react-hook-form'\nimport { Input, Icon } from '@rneui/themed';\n\nconst EmailInput = ({ name, control, errors, inputStyle, errorValidationStyle }) => {\n\n   return (\n    <>\n      <Controller \n        control={control} \n        rules= {{ required: true,  pattern: /^\\S+@\\S+$/i }}\n        render={({ field: { onChange, onBlur, value } }) => (\n          <Input\n            onChangeText={onChange}\n            onBlur={onBlur}\n            value={value}\n            style={inputStyle}\n            placeholderTextColor='black'\n            leftIcon={\n              <Icon name='at' type='ionicon' size={24} color={'black'} />\n            }\n            keyboardType='email-address'\n          />\n        )} \n        name={name} \n      />\n\n        {errors[name]?.type === 'required' && <Text style={errorValidationStyle}>Field Required</Text> }\n        {errors[name]?.type === 'pattern' && <Text style={errorValidationStyle}>Wrong Format</Text> }\n    </>\n  )\n}\n\nexport default EmailInput\n"],"mappings":";;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,KAAK,EAAEC,IAAI,QAAQ,eAAe;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAAC,IAAA,EAAoE;EAAA,IAAAC,YAAA,EAAAC,aAAA;EAAA,IAA9DC,IAAI,GAAAH,IAAA,CAAJG,IAAI;IAAEC,OAAO,GAAAJ,IAAA,CAAPI,OAAO;IAAEC,MAAM,GAAAL,IAAA,CAANK,MAAM;IAAEC,UAAU,GAAAN,IAAA,CAAVM,UAAU;IAAEC,oBAAoB,GAAAP,IAAA,CAApBO,oBAAoB;EAE1E,OACCT,KAAA,CAAAF,SAAA;IAAAY,QAAA,GACEd,IAAA,CAACJ,UAAU;MACTc,OAAO,EAAEA,OAAQ;MACjBK,KAAK,EAAG;QAAEC,QAAQ,EAAE,IAAI;QAAGC,OAAO,EAAE;MAAa,CAAE;MACnDC,MAAM,EAAE,SAAAA,OAAAC,KAAA;QAAA,IAAAC,WAAA,GAAAD,KAAA,CAAGE,KAAK;UAAIC,QAAQ,GAAAF,WAAA,CAARE,QAAQ;UAAEC,MAAM,GAAAH,WAAA,CAANG,MAAM;UAAEC,KAAK,GAAAJ,WAAA,CAALI,KAAK;QAAA,OACzCxB,IAAA,CAACH,KAAK;UACJ4B,YAAY,EAAEH,QAAS;UACvBC,MAAM,EAAEA,MAAO;UACfC,KAAK,EAAEA,KAAM;UACbE,KAAK,EAAEd,UAAW;UAClBe,oBAAoB,EAAC,OAAO;UAC5BC,QAAQ,EACN5B,IAAA,CAACF,IAAI;YAACW,IAAI,EAAC,IAAI;YAACoB,IAAI,EAAC,SAAS;YAACC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAE;UAAQ,CAAE,CAC3D;UACDC,YAAY,EAAC;QAAe,CAC7B,CAAC;MAAA,CACF;MACFvB,IAAI,EAAEA;IAAK,CACZ,CAAC,EAEC,EAAAF,YAAA,GAAAI,MAAM,CAACF,IAAI,CAAC,qBAAZF,YAAA,CAAcsB,IAAI,MAAK,UAAU,IAAI7B,IAAA,CAACiC,IAAI;MAACP,KAAK,EAAEb,oBAAqB;MAAAC,QAAA,EAAC;IAAc,CAAM,CAAC,EAC7F,EAAAN,aAAA,GAAAG,MAAM,CAACF,IAAI,CAAC,qBAAZD,aAAA,CAAcqB,IAAI,MAAK,SAAS,IAAI7B,IAAA,CAACiC,IAAI;MAACP,KAAK,EAAEb,oBAAqB;MAAAC,QAAA,EAAC;IAAY,CAAM,CAAC;EAAA,CAC7F,CAAC;AAEP,CAAC;AAED,eAAeT,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}