{"ast":null,"code":"import Text from \"react-native-web/dist/exports/Text\";\nimport React from 'react';\nimport { Controller } from 'react-hook-form';\nimport { Input, Icon } from '@rneui/themed';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar PasswordInput = function PasswordInput(_ref) {\n  var _errors$name, _errors$name2, _errors$name3;\n  var name = _ref.name,\n    control = _ref.control,\n    errors = _ref.errors,\n    inputStyle = _ref.inputStyle,\n    errorValidationStyle = _ref.errorValidationStyle,\n    secureEntry = _ref.secureEntry,\n    toggleSecuryEntry = _ref.toggleSecuryEntry;\n  return _jsxs(_Fragment, {\n    children: [_jsx(Controller, {\n      control: control,\n      rules: {\n        required: true,\n        minLength: 4,\n        maxLength: 8\n      },\n      render: function render(_ref2) {\n        var _ref2$field = _ref2.field,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          value = _ref2$field.value;\n        return _jsx(Input, {\n          onChangeText: onChange,\n          onBlur: onBlur,\n          value: value,\n          style: inputStyle,\n          placeholderTextColor: \"black\",\n          leftIcon: _jsx(Icon, {\n            name: \"key\",\n            type: \"ionicon\",\n            size: 24,\n            color: 'black'\n          }),\n          rightIcon: _jsx(Icon, {\n            name: \"eye\",\n            type: \"ionicon\",\n            size: 24,\n            color: 'black',\n            onPress: toggleSecuryEntry\n          }),\n          secureTextEntry: secureEntry\n        });\n      },\n      name: name\n    }), ((_errors$name = errors[name]) == null ? void 0 : _errors$name.type) === 'required' && _jsx(Text, {\n      style: errorValidationStyle,\n      children: \"Field Required\"\n    }), ((_errors$name2 = errors[name]) == null ? void 0 : _errors$name2.type) === 'minLength' && _jsx(Text, {\n      style: errorValidationStyle,\n      children: \"Password too short\"\n    }), ((_errors$name3 = errors[name]) == null ? void 0 : _errors$name3.type) === 'maxLength' && _jsx(Text, {\n      style: errorValidationStyle,\n      children: \"Password too long\"\n    })]\n  });\n};\nexport default PasswordInput;","map":{"version":3,"names":["React","Controller","Input","Icon","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","PasswordInput","_ref","_errors$name","_errors$name2","_errors$name3","name","control","errors","inputStyle","errorValidationStyle","secureEntry","toggleSecuryEntry","children","rules","required","minLength","maxLength","render","_ref2","_ref2$field","field","onChange","onBlur","value","onChangeText","style","placeholderTextColor","leftIcon","type","size","color","rightIcon","onPress","secureTextEntry","Text"],"sources":["/Users/landroide/Desktop/ReactNative/Pros/WithExpo/Demo-project/src/components/inputs/PasswordInput.js"],"sourcesContent":["import { Text } from 'react-native'\nimport React from 'react'\nimport { Controller } from 'react-hook-form'\nimport { Input, Icon } from '@rneui/themed';\n\nconst PasswordInput = ({ name, control, errors, inputStyle, errorValidationStyle, secureEntry, toggleSecuryEntry }) => {\n  return (\n    <>\n      <Controller \n        control={control} \n        rules= {{ required: true,  minLength: 4, maxLength: 8 }}\n        render={({ field: { onChange, onBlur, value }}) => (\n          <Input\n            onChangeText={onChange}\n            onBlur={onBlur}\n            value={value}\n            style={inputStyle}\n            placeholderTextColor='black'\n            leftIcon={\n              <Icon name='key' type='ionicon' size={24} color={'black'} />\n            }\n            rightIcon={\n              <Icon name='eye' type='ionicon' size={24} color={'black'} onPress={toggleSecuryEntry} />\n            }\n            secureTextEntry={secureEntry}\n          />\n        )} \n        name={name} />\n\n        {errors[name]?.type === 'required' && <Text style={errorValidationStyle}>Field Required</Text> }\n        {errors[name]?.type === 'minLength' && <Text style={errorValidationStyle}>Password too short</Text> }\n        {errors[name]?.type === 'maxLength' && <Text style={errorValidationStyle}>Password too long</Text> }\n    </>\n  )\n}\n\nexport default PasswordInput\n\n"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,KAAK,EAAEC,IAAI,QAAQ,eAAe;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE5C,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAAC,IAAA,EAAoG;EAAA,IAAAC,YAAA,EAAAC,aAAA,EAAAC,aAAA;EAAA,IAA9FC,IAAI,GAAAJ,IAAA,CAAJI,IAAI;IAAEC,OAAO,GAAAL,IAAA,CAAPK,OAAO;IAAEC,MAAM,GAAAN,IAAA,CAANM,MAAM;IAAEC,UAAU,GAAAP,IAAA,CAAVO,UAAU;IAAEC,oBAAoB,GAAAR,IAAA,CAApBQ,oBAAoB;IAAEC,WAAW,GAAAT,IAAA,CAAXS,WAAW;IAAEC,iBAAiB,GAAAV,IAAA,CAAjBU,iBAAiB;EAC9G,OACEZ,KAAA,CAAAF,SAAA;IAAAe,QAAA,GACEjB,IAAA,CAACJ,UAAU;MACTe,OAAO,EAAEA,OAAQ;MACjBO,KAAK,EAAG;QAAEC,QAAQ,EAAE,IAAI;QAAGC,SAAS,EAAE,CAAC;QAAEC,SAAS,EAAE;MAAE,CAAE;MACxDC,MAAM,EAAE,SAAAA,OAAAC,KAAA;QAAA,IAAAC,WAAA,GAAAD,KAAA,CAAGE,KAAK;UAAIC,QAAQ,GAAAF,WAAA,CAARE,QAAQ;UAAEC,MAAM,GAAAH,WAAA,CAANG,MAAM;UAAEC,KAAK,GAAAJ,WAAA,CAALI,KAAK;QAAA,OACzC5B,IAAA,CAACH,KAAK;UACJgC,YAAY,EAAEH,QAAS;UACvBC,MAAM,EAAEA,MAAO;UACfC,KAAK,EAAEA,KAAM;UACbE,KAAK,EAAEjB,UAAW;UAClBkB,oBAAoB,EAAC,OAAO;UAC5BC,QAAQ,EACNhC,IAAA,CAACF,IAAI;YAACY,IAAI,EAAC,KAAK;YAACuB,IAAI,EAAC,SAAS;YAACC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAE;UAAQ,CAAE,CAC5D;UACDC,SAAS,EACPpC,IAAA,CAACF,IAAI;YAACY,IAAI,EAAC,KAAK;YAACuB,IAAI,EAAC,SAAS;YAACC,IAAI,EAAE,EAAG;YAACC,KAAK,EAAE,OAAQ;YAACE,OAAO,EAAErB;UAAkB,CAAE,CACxF;UACDsB,eAAe,EAAEvB;QAAY,CAC9B,CAAC;MAAA,CACF;MACFL,IAAI,EAAEA;IAAK,CAAE,CAAC,EAEb,EAAAH,YAAA,GAAAK,MAAM,CAACF,IAAI,CAAC,qBAAZH,YAAA,CAAc0B,IAAI,MAAK,UAAU,IAAIjC,IAAA,CAACuC,IAAI;MAACT,KAAK,EAAEhB,oBAAqB;MAAAG,QAAA,EAAC;IAAc,CAAM,CAAC,EAC7F,EAAAT,aAAA,GAAAI,MAAM,CAACF,IAAI,CAAC,qBAAZF,aAAA,CAAcyB,IAAI,MAAK,WAAW,IAAIjC,IAAA,CAACuC,IAAI;MAACT,KAAK,EAAEhB,oBAAqB;MAAAG,QAAA,EAAC;IAAkB,CAAM,CAAC,EAClG,EAAAR,aAAA,GAAAG,MAAM,CAACF,IAAI,CAAC,qBAAZD,aAAA,CAAcwB,IAAI,MAAK,WAAW,IAAIjC,IAAA,CAACuC,IAAI;MAACT,KAAK,EAAEhB,oBAAqB;MAAAG,QAAA,EAAC;IAAiB,CAAM,CAAC;EAAA,CACpG,CAAC;AAEP,CAAC;AAED,eAAeZ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}